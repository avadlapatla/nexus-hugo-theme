// Nexus Hugo Theme - Mixins

// Media Query Mixins
// ------------

// Breakpoint viewport sizes and media queries
@mixin media-breakpoint-up($breakpoint) {
  $min: map-get($grid-breakpoints, $breakpoint);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($breakpoint) {
  $max: map-get($grid-breakpoints, $breakpoint);
  @if $max {
    @media (max-width: ($max - 0.02)) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-between($min, $max) {
  $min-width: map-get($grid-breakpoints, $min);
  $max-width: map-get($grid-breakpoints, $max);
  @if $min-width and $max-width {
    @media (min-width: $min-width) and (max-width: ($max-width - 0.02)) {
      @content;
    }
  } @else if $min-width {
    @include media-breakpoint-up($min) {
      @content;
    }
  } @else if $max-width {
    @include media-breakpoint-down($max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Typography Mixins
// ------------

@mixin font-heading($size: null, $weight: null, $line-height: null) {
  font-family: $font-family-heading;
  @if $size { font-size: $size; }
  @if $weight { font-weight: $weight; }
  @if $line-height { line-height: $line-height; }
}

@mixin font-body($size: null, $weight: null, $line-height: null) {
  font-family: $font-family-base;
  @if $size { font-size: $size; }
  @if $weight { font-weight: $weight; }
  @if $line-height { line-height: $line-height; }
}

// Truncate text with ellipsis
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multi-line text truncation
@mixin text-truncate-lines($lines) {
  display: -webkit-box;
  overflow: hidden;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
}

// Spacing Mixins
// ------------

@mixin margin($top: 0, $right: 0, $bottom: 0, $left: 0) {
  margin-top: $top;
  margin-right: $right;
  margin-bottom: $bottom;
  margin-left: $left;
}

@mixin padding($top: 0, $right: 0, $bottom: 0, $left: 0) {
  padding-top: $top;
  padding-right: $right;
  padding-bottom: $bottom;
  padding-left: $left;
}

// Box Mixins
// ------------

// Flexbox utilities
@mixin flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column() {
  display: flex;
  flex-direction: column;
}

// Visual Effects
// ------------

// Box shadow variations
@mixin box-shadow-soft() {
  box-shadow: $box-shadow;
  transition: box-shadow 0.3s ease;
  
  &:hover {
    box-shadow: $box-shadow-lg;
  }
}

// Card style
@mixin card-style() {
  background-color: $white;
  border-radius: $border-radius;
  box-shadow: $box-shadow;
  transition: $transition-base;
  
  &:hover {
    box-shadow: $box-shadow-lg;
    transform: translateY(-2px);
  }
}

// Transitions
@mixin transition-standard() {
  transition: all 0.3s ease;
}

// Hover effect with underline for links
@mixin hover-underline() {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 0;
    background-color: currentColor;
    transition: width 0.3s ease;
  }
  
  &:hover::after {
    width: 100%;
  }
}

// Backgrounds
// ------------

// Gradient overlay
@mixin gradient-overlay($color: $primary, $opacity: 0.7, $direction: 'to bottom') {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(#{$direction}, #{rgba($color, $opacity)}, rgba($color, 0.3));
    z-index: 1;
  }
  
  > * {
    position: relative;
    z-index: 2;
  }
}

// Button Mixins
// ------------

@mixin button-base() {
  display: inline-block;
  font-weight: $btn-font-weight;
  line-height: 1.5;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  padding: $btn-padding-y $btn-padding-x;
  border-radius: $btn-border-radius;
  transition: $transition-base;
  text-decoration: none;
  
  &:focus {
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba($accent, 0.25);
  }
}

@mixin button-variant($background, $border, $hover-background, $hover-border, $active-background, $active-border) {
  color: color-contrast($background);
  background-color: $background;
  border: 1px solid $border;

  &:hover {
    color: color-contrast($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:active {
    color: color-contrast($active-background);
    background-color: $active-background;
    border-color: $active-border;
  }
}

// Helper function to determine contrasting color
@function color-contrast($color) {
  $lightness: lightness($color);
  @return if($lightness > 60, $black, $white);
}
